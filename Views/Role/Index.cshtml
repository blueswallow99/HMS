@model WebApplication1.ViewModel.RoleViewModel
@{
    ViewBag.Title = "Index";
}

<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<link href="https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/responsive/2.2.5/css/responsive.bootstrap4.min.css" rel="stylesheet" />
<script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.21/js/dataTables.bootstrap4.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        LoadRoleDetail();
        $("#txtUserId").val("0");
        $("#btnSave").click(function () {
            if (!$("#formRole").valid()) {
                return;
            }
            SaveRoleData();
            ResetRoleInformation();
            LoadRoleDetail();
        });
    });

 function DeleteRole(userId) {

        var result = confirm("Are you sure you want to delete?");
        if (result === false) {
            return false;

        }
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            data: { userId: userId },
            url: '/Role/DeleteRoleDetails',
            success: function (data) {
                if (data.success === true) {
                    alert(data.message);
                    LoadRoleDetail();
                }
            },
            error: function () {
                alert('there is a problem with deleting');
            }
        });
    } 

    function EditRole(userId) {
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            data: { userId: userId },
            url: '/Role/EditRoleDetails',
            success: function (data) {
                
                $("#txtUserName").val(data.UserName);
                $("#txtUserPasword").val(data.UserPasword);
                $("#ddRoleId").val(data.UserRule);
                $("#divAddRole").modal({ show: true });
                $("#txtUserId").val(data.UserId);
                $("#btnSave").val("Update");
                LoadRoleDetail();
            },
            error: function () {
                alert('There is some problem to process');
            }
        });
    }

    function LoadRoleDetail() {
        //divLoadRoleDetails
        $.ajax({
            async: true,
            data: 'GET',
            contentType: false,
            processData: false,
            url: '/Role/GetAllRoles',
            success: function (data) {
                $("#divLoadRoleDetails").html(data);
            },
            error: function () {
                alert('There is a problem! Fix it.');
            }
        });
    }
    
    function SaveRoleData() {
        var formData = new FormData;
        formData.append("UserId", $("#txtUserId").val());
        formData.append("UserName", $("#txtUserName").val());
        formData.append("UserPasword", $("#txtUserPasword").val());
        formData.append("RoleId", $("#ddRoleId").val());
        formData.append("IsActive", $("#txtIsActive").val());
        
        $.ajax({
            async: true,
            type: 'POST',
            contentType: false,
            processData: false,
            data: formData,
            success: function (data) {
                if (data.success === true) {
                    alert(data.message);
                    ResetRoleInformation();
                    LoadRoleDetail();
                }

            },
            error: function () {
                alert('There is a problem to process your request. Please try again later.');
            }
        });
    }

    function ResetRoleInformation() {
       
        $("#txtUserName").val(' ');
        $("#txtUserPasword").val(' ');
        $("#ddRoleId").val(' ');
        $("#txtIsActive").val(' '); 
        $("#btnSave").val("Save");
    }

</script>



<div style="margin-top:20px">
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#divAddRole" data-backdrop="static" data-keyboard="false"> Add Role</button>
</div>

<div id="divAddRole" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Role</h4>
                <button type="button" class="close" data-dismiss="modal" style="margin: 0px 0px 0px 0px; padding: 0px 0px; position:inherit;">&times;</button>
            </div>
            <div class="modal-body">
                <form id="formRole">
                    <div class="container">
                        @Html.HiddenFor(model => model.UserId, new { id = "txtUserId" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName)
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", id = "txtUserName" })
                            @Html.ValidationMessageFor(model => model.UserName, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserPasword)
                            @Html.TextBoxFor(model => model.UserPasword, new { @class = "form-control", id = "txtUserPasword" })
                            @Html.ValidationMessageFor(model => model.UserPasword, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.RoleId)
                            @Html.DropDownListFor(model => model.RoleId,Model.ListofRoleName, new { @class = "form-control", id = "ddRoleId" })
                            @Html.ValidationMessageFor(model => model.RoleId, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsActive)
                            @Html.CheckBoxFor(model => model.IsActive, new { @class = "form-control", id = "txtIsActive" })
                            @Html.ValidationMessageFor(model => model.IsActive, null, new { @class = "text-danger" })
                        </div>



                    </div>
                </form>
            </div>


            <div class="modal-footer">
                <button id="btnSave" type="button" class="btn btn-success"> Save</button> &nbsp;
                <button type="button" data-dismiss="modal" class="btn btn-danger">Close </button>
            </div>
        </div>
    </div>
</div>

<div style="margin-top:10px">

</div>
<div id="divLoadRoleDetails">

</div>